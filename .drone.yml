kind: pipeline
type: docker
name: default

platform:
  os: linux
  arch: amd64

x-build-docker-image: &x-build-docker-image
  image: plugins/docker
  settings:
    custom_labels:
    - 'BUILD_NUMBER=${DRONE_BUILD_NUMBER}'
    - 'BUILD_SHA=${DRONE_COMMIT_SHA}'
    tags:
      - ${DRONE_COMMIT_BRANCH}-${DRONE_COMMIT_SHA:0:7}
      - latest
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password

steps:
- name: test
  pull: if-not-exists
  image: golang:1.15.2
  commands:
  - go mod download
  - make test
  when:
    event:
    - push
- name: sonar-scanner
  image: sonarsource/sonar-scanner-cli:4.6
  environment:
    SONAR_HOST:
      from_secret: sonar_host
    SONAR_LOGIN_TOKEN:
      from_secret: sonar_login_token
  commands:
  - >
    sonar-scanner
    -Dsonar.host.url=$SONAR_HOST
    -Dsonar.login=$SONAR_LOGIN_TOKEN
    -Dsonar.projectKey=minghsu0107_saga-purchase
    -Dsonar.projectVersion=${DRONE_BUILD_NUMBER}
    -Dsonar.projectBaseDir=$PWD
    -Dsonar.links.homepage=${DRONE_REPO_LINK}
    -Dsonar.links.ci=${DRONE_BUILD_LINK}
    -Dsonar.sources=.
    -Dsonar.go.coverage.reportPaths=cover.out
    -Dsonar.exclusions=**/*.pb.go,**/*.pb.gw.go,**/*_test.go,**/*_mock.go
  depends_on:
    - test
  when:
    event:
    - push
- name: push-registry
  <<: *x-build-docker-image
  settings:
    repo: minghsu0107/saga-purchase
    dockerfile: Dockerfile
    context: .
  depends_on:
    - test
  when:
    branch:
    - main
    event:
    - push
- name: release
  <<: *x-build-docker-image
  settings:
    tags:
      - ${DRONE_TAG}
    repo: minghsu0107/saga-purchase
    dockerfile: Dockerfile
    context: .
  when:
    event:
    - tag
